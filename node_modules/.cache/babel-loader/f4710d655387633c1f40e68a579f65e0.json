{"ast":null,"code":"import _regeneratorRuntime from \"/home/surajv/Documents/Blockchain prjct/doc_verify-master/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/surajv/Documents/Blockchain prjct/doc_verify-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/surajv/Documents/Blockchain prjct/doc_verify-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/surajv/Documents/Blockchain prjct/doc_verify-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/surajv/Documents/Blockchain prjct/doc_verify-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/surajv/Documents/Blockchain prjct/doc_verify-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/surajv/Documents/Blockchain prjct/doc_verify-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/surajv/Documents/Blockchain prjct/doc_verify-master/src/App.js\";\nimport React, { Component } from 'react';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\nimport { Button } from 'reactstrap';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ipfsHash: null,\n      buffer: '',\n      buffer2: '',\n      ethAddress: '',\n      transactionHash: '',\n      txReceipt: '',\n      add_rec: '',\n      issuee_data_1: [],\n      issuee_data_2: [],\n      cert_hash: '',\n      str1: '',\n      str2: '',\n      str3: '',\n      str4: '',\n      my_acc: ''\n    };\n\n    _this.recipientChange = function (event) {\n      _this.setState({\n        add_rec: event.target.value\n      });\n    };\n\n    _this.hashChange = function (event) {\n      _this.setState({\n        cert_hash: event.target.value\n      });\n    };\n\n    _this.captureFile = function (event) {\n      event.stopPropagation();\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader);\n      };\n    };\n\n    _this.convertToBuffer =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Buffer.from(reader.result);\n\n              case 2:\n                buffer = _context.sent;\n\n                //set this buffer-using es6 syntax\n                _this.setState({\n                  buffer: buffer\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.captureFile2 = function (event) {\n      event.stopPropagation();\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer2(reader);\n      };\n    };\n\n    _this.convertToBuffer2 =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(reader) {\n        var buffer2;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Buffer.from(reader.result);\n\n              case 2:\n                buffer2 = _context2.sent;\n\n                //set this buffer-using es6 syntax\n                _this.setState({\n                  buffer2: buffer2\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onClick =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              _this.setState({\n                blockNumber: \"waiting..\"\n              });\n\n              _this.setState({\n                gasUsed: \"waiting...\"\n              });\n\n              _context3.next = 5;\n              return web3.eth.getTransactionReceipt(_this.state.transactionHash, function (err, txReceipt) {\n                console.log(err, txReceipt);\n\n                _this.setState({\n                  txReceipt: txReceipt\n                });\n              });\n\n            case 5:\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    _this.getHash =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault();\n                _context4.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context4.sent;\n                _context4.next = 6;\n                return ipfs.add(_this.state.buffer2, function (err, ipfsHash) {\n                  console.log(err, ipfsHash);\n                  var iphash = ipfsHash[0].hash;\n                  storehash.methods.is_cert_in_blockchain(iphash).call({\n                    from: accounts[0]\n                  }, function (error, boolv) {\n                    var iscert = _this.refs.ll2;\n\n                    if (boolv == true) {\n                      iscert.append(\"This certificate is in Ethereum Blockchain\");\n                      storehash.methods.get_from_cert(iphash).call({\n                        from: accounts[0]\n                      }, function (error, str) {\n                        _this.setState({\n                          str3: str[0]\n                        });\n\n                        _this.setState({\n                          str4: str[1]\n                        });\n                      });\n                    } else {\n                      iscert.append(\"This certificate is not in Ethereum Blockchain\");\n                    }\n                  });\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(event) {\n        var accounts, ethAddress;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                event.preventDefault(); //bring in user's metamask account address\n\n                _context5.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context5.sent;\n                _context5.next = 6;\n                return storehash.options.address;\n\n              case 6:\n                ethAddress = _context5.sent;\n\n                _this.setState({\n                  ethAddress: ethAddress\n                }); //save document to IPFS,return its hash#, and set hash# to state\n\n\n                _context5.next = 10;\n                return ipfs.add(_this.state.buffer, function (err, ipfsHash) {\n                  console.log(err, ipfsHash); //setState by setting ipfsHash to ipfsHash[0].hash\n\n                  _this.setState({\n                    ipfsHash: ipfsHash[0].hash\n                  }); //var add_rec= $('#add_rec').val();\n                  // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract\n                  //return the transaction hash from the ethereum contract\n\n\n                  storehash.methods.issue_cert(_this.state.add_rec, _this.state.ipfsHash).send({\n                    from: accounts[0]\n                  }, function (error, transactionHash) {\n                    console.log(transactionHash);\n\n                    _this.setState({\n                      transactionHash: transactionHash\n                    });\n                  });\n                });\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.show_acc =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context6.sent;\n\n                _this.setState({\n                  my_acc: accounts[0]\n                });\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.show_cert_2 =\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context7.sent;\n                storehash.methods.issuee_cert_cnt(accounts[0]).call({\n                  from: accounts[0]\n                }, function (error, result) {\n                  var len = parseInt(result);\n\n                  for (var i = 0; i < len; i++) {\n                    var i_data1 = [];\n                    var i_data2 = [];\n                    storehash.methods.get_cert_issuee(i).call({\n                      from: accounts[0]\n                    }, function (error, ans) {\n                      i_data1.push(ans[0]);\n                      i_data2.push(ans[1]);\n                      var cert_table = _this.refs.cert_table_1;\n                      cert_table.append(\" \" + ans[0] + \" \" + ans[1] + \"   link:gateway.ipfs.io/ipfs/\" + ans[1] + \":___________________________________________\"); // console.log(i_data1[0]);\n                      // console.log(i_data2[0]);\n                    }); // console.log(i_data1);\n\n                    _this.setState({\n                      issuee_data_1: i_data1\n                    });\n\n                    _this.state.issuee_data_1.map(function (item) {\n                      return console.log(item);\n                    }); // console.log(x[0]);\n\n\n                    _this.setState({\n                      issuee_data_2: i_data2\n                    });\n\n                    var cert_table = _this.refs.cert_table_1;\n                    cert_table.append(\"\"); // for(var i=0;i<count;i++){\n                    //   certificate_instance.get_cert_issuer(i).then(function(issuer_data){\n                    //     var address = issuer_data[0];\n                    //     var hash = issuer_data[1]; \n                    //     var temp = \"<tr><td>\"+address+\"</td><td>\"+hash+\"</td></tr>\";\n                    //     cert_table.append(temp);\n                    //   });\n                    // }\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    _this.onVerify =\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                event.preventDefault();\n                _context8.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context8.sent;\n                storehash.methods.is_cert_in_blockchain(_this.state.cert_hash).call({\n                  from: accounts[0]\n                }, function (error, boolv) {\n                  var iscert = _this.refs.ll;\n\n                  if (boolv == true) {\n                    iscert.append(\"This certificate is in Ethereum Blockchain\");\n                    storehash.methods.get_from_cert(_this.state.cert_hash).call({\n                      from: accounts[0]\n                    }, function (error, str) {\n                      _this.setState({\n                        str1: str[0]\n                      });\n\n                      _this.setState({\n                        str2: str[1]\n                      });\n                    });\n                  } else {\n                    iscert.append(\"This certificate is not in Ethereum Blockchain\");\n                  }\n                }); // }).then(function(boolv){\n                //   var str1=$('#str1');  \n                //   if(boolv==true){\n                //     str1.append(\"This certificate is in Ethereum Blockchain\");\n                //           // var c_hash=$('#c_hash').val();\n                //     return certificate_instance.get_from_cert(c_hash,{from:App.account});\n                //   }\n                //   else{\n                //     str1.append(\"This certificate is not in Ethereum Blockchain\");      \n                //   }\n                // }).then(function(addresses){\n                //   var str2=$('#str2');  \n                //   var str3=$('#str3');  \n                //   str2.append(\"Issuer Address :\"+addresses[0]+\"</br>\");\n                //   str2.append(\"Recipient Address :\"+addresses[1]);\n                // });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // createTable=()=>{\n    //   let table=[];\n    //   let table_issue_1 = this.state.issuee_data_1;\n    //   let table_issue_2 = this.state.issuee_data_2;\n    //   for(let i =0;i<1;i++){\n    //     let table_1 = [];\n    //     // console.log(this.state.issuee_data_1);\n    //     table_1.push(<td>{table_issue_1[i]}</td>);\n    //     table_1.push(<td>{table_issue_2[i]}</td>);\n    //     table.push(<tr>{table_1}</tr>);\n    //   }\n    // };\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Ethereum and IPFS using Infura\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Your Account: \", this.state.my_acc), React.createElement(Button, {\n        onClick: this.show_acc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \" Show Account \")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(\"grid\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \" Choose file to send to IPFS \"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"recipient address:\", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"add_rec\",\n        onChange: this.recipientChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Send it\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        bordered: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Tx Receipt Category\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \" \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Values\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"IPFS Hash stored on Ethereum\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \" : \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, this.state.ipfsHash)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Ethereum Contract Address\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \" : \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, this.state.ethAddress)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Tx # \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \" : \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, this.state.transactionHash)))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Recipient\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"accountAddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.show_cert_2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \" Show Certificate \"), React.createElement(\"table\", {\n        ref: \"cert_table_1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \" Verify Data\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Search By Certificate Hash\"), React.createElement(\"form\", {\n        onSubmit: this.onVerify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Enter Certificate hash:\", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input\",\n        onChange: this.hashChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Verify it\")), React.createElement(\"p\", {\n        ref: \"ll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Issuer Address - \", this.state.str1), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Recipient Address - \", this.state.str2), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"Search By Certificate\"), React.createElement(\"form\", {\n        onSubmit: this.getHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Verify it\")), React.createElement(\"p\", {\n        ref: \"ll2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Issuer Address - \", this.state.str3), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Recipient Address - \", this.state.str4)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/surajv/Documents/Blockchain prjct/doc_verify-master/src/App.js"],"names":["React","Component","web3","ipfs","storehash","Button","App","state","ipfsHash","buffer","buffer2","ethAddress","transactionHash","txReceipt","add_rec","issuee_data_1","issuee_data_2","cert_hash","str1","str2","str3","str4","my_acc","recipientChange","event","setState","target","value","hashChange","captureFile","stopPropagation","preventDefault","file","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","captureFile2","convertToBuffer2","onClick","blockNumber","gasUsed","eth","getTransactionReceipt","err","console","log","getHash","getAccounts","accounts","add","iphash","hash","methods","is_cert_in_blockchain","call","error","boolv","iscert","refs","ll2","append","get_from_cert","str","onSubmit","options","address","issue_cert","send","show_acc","show_cert_2","issuee_cert_cnt","len","parseInt","i","i_data1","i_data2","get_cert_issuee","ans","push","cert_table","cert_table_1","map","item","onVerify","ll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\nimport { Button } from 'reactstrap';\n\nclass App extends Component {\n\nstate = {\n      ipfsHash:null,\n      buffer:'',\n      buffer2:'',\n      ethAddress:'',\n      transactionHash:'',\n      txReceipt: '',\n      add_rec:'',\n      issuee_data_1: [],\n      issuee_data_2: [],\n      cert_hash:'',\n      str1:'',\n      str2:'',\n      str3:'',\n      str4:'',\n      my_acc:''\n    };\n\nrecipientChange = (event) => {\n  this.setState({add_rec: event.target.value});\n}\nhashChange = (event) => {\n  this.setState({cert_hash: event.target.value});\n}\n//Take file input from user\ncaptureFile =(event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => this.convertToBuffer(reader)\n      };\n\n//Convert the file to buffer to store on IPFS\n convertToBuffer = async(reader) => {\n      //file is converted to a buffer for upload to IPFS\n        const buffer = await Buffer.from(reader.result);\n      //set this buffer-using es6 syntax\n        this.setState({buffer});\n    };\n\n\n    captureFile2 =(event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => this.convertToBuffer2(reader)\n      };\n\n//Convert the file to buffer to store on IPFS\n convertToBuffer2 = async(reader) => {\n      //file is converted to a buffer for upload to IPFS\n        const buffer2 = await Buffer.from(reader.result);\n      //set this buffer-using es6 syntax\n        this.setState({buffer2});\n    };\n\n//ES6 async function\nonClick = async () => {\ntry{\n        this.setState({blockNumber:\"waiting..\"});\n        this.setState({gasUsed:\"waiting...\"});\n\nawait web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt)=>{\n          console.log(err,txReceipt);\n          this.setState({txReceipt});\n        });\n      }\ncatch(error){\n      console.log(error);\n    }\n}\ngetHash= async (event) => {\n    event.preventDefault();\n    const accounts = await web3.eth.getAccounts();\n    await ipfs.add(this.state.buffer2, (err, ipfsHash) => {\n        console.log(err,ipfsHash);\n        const iphash= ipfsHash[0].hash;\n        storehash.methods.is_cert_in_blockchain(iphash).call({from: accounts[0]}, (error, boolv) => {\n          var iscert = this.refs.ll2;\n          if(boolv==true){\n            iscert.append(\"This certificate is in Ethereum Blockchain\");\n            storehash.methods.get_from_cert(iphash).call({from: accounts[0]}, (error, str) => {\n              this.setState({str3:str[0]});\n              this.setState({str4:str[1]});\n            });\n          }\n          else{\n            iscert.append(\"This certificate is not in Ethereum Blockchain\");\n          }\n    })\n  })    \n};\n\nonSubmit = async (event) => {\n      event.preventDefault();\n\n//bring in user's metamask account address\n      const accounts = await web3.eth.getAccounts();\n    //obtain contract address from storehash.js\n      const ethAddress= await storehash.options.address;\n      this.setState({ethAddress});\n    //save document to IPFS,return its hash#, and set hash# to state\n      await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n        console.log(err,ipfsHash);\n        //setState by setting ipfsHash to ipfsHash[0].hash\n        this.setState({ ipfsHash:ipfsHash[0].hash });\n        //var add_rec= $('#add_rec').val();\n\n        // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract\n        //return the transaction hash from the ethereum contract\n        storehash.methods.issue_cert(this.state.add_rec,this.state.ipfsHash).send({\n          from: accounts[0]\n        }, (error, transactionHash) => {\n          console.log(transactionHash);\n          this.setState({transactionHash});\n        });\n      })\n    };\n    show_acc= async (event) =>{\n      const accounts = await web3.eth.getAccounts();\n      this.setState({my_acc:accounts[0]});\n    }\n    show_cert_2 = async (event) => {\n      //  App.contracts.Certificate.deployed().then(function(instance) {\n      // certificate_instance = instance;\n      // return instance.issuee_cert_cnt(App.account,{from:App.account});\n      const accounts = await web3.eth.getAccounts();\n      storehash.methods.issuee_cert_cnt(accounts[0]).call({from: accounts[0]},(error, result) => {\n        const len = parseInt(result);\n        for(let i =0;i<len;i++){\n          var i_data1=[];\n          var i_data2=[];\n        storehash.methods.get_cert_issuee(i).call({from: accounts[0]}, (error, ans) => {\n          i_data1.push(ans[0]);\n          i_data2.push(ans[1]);\n\n          var cert_table = this.refs.cert_table_1;\n          cert_table.append(\" \"+ans[0]+\" \"+ans[1]+\"   link:gateway.ipfs.io/ipfs/\"+ans[1]+\":___________________________________________\");\n          // console.log(i_data1[0]);\n          // console.log(i_data2[0]);\n        })\n        // console.log(i_data1);\n        this.setState({issuee_data_1:i_data1});\n        this.state.issuee_data_1.map(item=>(console.log(item)));\n        // console.log(x[0]);\n        this.setState({issuee_data_2:i_data2});\n\n        var cert_table = this.refs.cert_table_1;\n        cert_table.append(\"\");\n      // for(var i=0;i<count;i++){\n      //   certificate_instance.get_cert_issuer(i).then(function(issuer_data){\n      //     var address = issuer_data[0];\n      //     var hash = issuer_data[1]; \n      //     var temp = \"<tr><td>\"+address+\"</td><td>\"+hash+\"</td></tr>\";\n      //     cert_table.append(temp);\n      //   });\n      // }\n      }\n      });\n\n  };\n  \n  onVerify = async (event) => {\n    event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n    storehash.methods.is_cert_in_blockchain(this.state.cert_hash).call({from: accounts[0]}, (error, boolv) => {\n      var iscert = this.refs.ll;\n      if(boolv==true){\n        iscert.append(\"This certificate is in Ethereum Blockchain\");\n        storehash.methods.get_from_cert(this.state.cert_hash).call({from: accounts[0]}, (error, str) => {\n          this.setState({str1:str[0]});\n          this.setState({str2:str[1]});\n        });\n      }\n      else{\n        iscert.append(\"This certificate is not in Ethereum Blockchain\");\n      }\n\n    });\n    // }).then(function(boolv){\n    //   var str1=$('#str1');  \n    //   if(boolv==true){\n    //     str1.append(\"This certificate is in Ethereum Blockchain\");\n    //           // var c_hash=$('#c_hash').val();\n\n    //     return certificate_instance.get_from_cert(c_hash,{from:App.account});\n    //   }\n    //   else{\n    //     str1.append(\"This certificate is not in Ethereum Blockchain\");      \n    //   }\n    // }).then(function(addresses){\n    //   var str2=$('#str2');  \n    //   var str3=$('#str3');  \n    //   str2.append(\"Issuer Address :\"+addresses[0]+\"</br>\");\n    //   str2.append(\"Recipient Address :\"+addresses[1]);\n    // });\n  };\n// createTable=()=>{\n\n//   let table=[];\n//   let table_issue_1 = this.state.issuee_data_1;\n//   let table_issue_2 = this.state.issuee_data_2;\n//   for(let i =0;i<1;i++){\n//     let table_1 = [];\n//     // console.log(this.state.issuee_data_1);\n//     table_1.push(<td>{table_issue_1[i]}</td>);\n//     table_1.push(<td>{table_issue_2[i]}</td>);\n//     table.push(<tr>{table_1}</tr>);\n//   }\n// };\n\nrender() {\n\nreturn (\n        <div>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>Ethereum and IPFS using Infura</h1>\n          </header>\n\n<hr/>\n        <div>\n         <p>Your Account: {this.state.my_acc}</p> \n        <Button onClick = {this.show_acc}> Show Account </Button>\n        </div>\n<hr/>\n<grid>\n          <h3> Choose file to send to IPFS </h3>\n          <form onSubmit={this.onSubmit}>\n          <label>recipient address:\n            <input\n              type = \"text\" id=\"add_rec\" onChange = {this.recipientChange}\n            />\n            </label>\n            <br></br>\n            <input\n              type = \"file\"\n              onChange = {this.captureFile}\n            />\n             <Button\n             bsStyle=\"primary\"\n             type=\"submit\">\n             Send it\n             </Button>\n          </form>\n<hr/>\n  <table bordered responsive>\n                <thead>\n                  <tr>\n                    <th>Tx Receipt Category</th>\n                    <th> </th>\n                    <th>Values</th>\n                  </tr>\n                </thead>\n\n<tbody>\n                  <tr>\n                    <td>IPFS Hash stored on Ethereum</td>\n                    <td> : </td>\n                    <td>{this.state.ipfsHash}</td>\n                  </tr>\n                  <tr>\n                    <td>Ethereum Contract Address</td>\n                    <td> : </td>\n                    <td>{this.state.ethAddress}</td>\n                  </tr>\n                  <tr>\n                    <td>Tx # </td>\n                    <td> : </td>\n                    <td>{this.state.transactionHash}</td>\n                  </tr>\n                </tbody>\n            </table>\n        </grid>\n     </div>\n      <div>\n          <hr/>\n          <h1>Recipient</h1>\n          <br/>\n          <p id=\"accountAddress\"></p><br/>\n             <Button onClick = {this.show_cert_2}> Show Certificate </Button>\n             <table ref=\"cert_table_1\">\n             </table>\n             \n      </div>\n      <div>\n          <hr/>\n          <h3> Verify Data</h3>\n            <h4>Search By Certificate Hash</h4>\n          <form onSubmit={this.onVerify}>\n          <label>Enter Certificate hash:\n            <input\n              type = \"text\" id=\"input\" onChange = {this.hashChange}\n            />\n            </label>\n            <br></br>\n            <Button\n            bsStyle=\"primary\"\n             type=\"submit\">\n             Verify it\n             </Button>\n          </form>\n          <p ref=\"ll\"></p>\n\n          <p>Issuer Address - {this.state.str1}</p>\n          <br/>\n          <p>Recipient Address - {this.state.str2}</p>\n            <br/>\n            <h4>Search By Certificate</h4>\n          <form onSubmit={this.getHash}>\n            <br></br>\n            <input\n              type = \"file\"\n              onChange = {this.captureFile2}\n            />\n            <br/><br/>\n             <Button\n             bsStyle=\"primary\"\n             type=\"submit\">\n             Verify it\n             </Button>\n            </form>\n          <p ref=\"ll2\"></p>\n          <p>Issuer Address - {this.state.str3}</p>\n          <br/>\n          <p>Recipient Address - {this.state.str4}</p>\n      </div>\n    </div>\n      );\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}